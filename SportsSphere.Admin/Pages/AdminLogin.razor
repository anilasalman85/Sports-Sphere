@page "/"
@inject NavigationManager Navigation
@layout CustomLayout

<!-- Importing Google Fonts -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">


<!-- Styling for the login page -->
<style>
    body {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100vh;
        margin: 0;
        z-index: -1;
        background-color: #ffffff;
        opacity: 1;
        background-image: repeating-radial-gradient( circle at 0 0, transparent 0, #ffffff 40px ), repeating-linear-gradient( #d9ffbb55, #d9ffbb );
    }

    .center-container {
        text-align: center;
    }

    .container {
        width: 300px;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        background-color: #21D192;
        display: inline-block;
    }

    .form-group {
        margin-bottom: 15px;
    }

    . {
        width: 100%;
    }
</style>

<!-- Include Animate.css for animation effects -->
<link rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />

<!-- Login heading -->
<h3 style="color:#21D192;">Login</h3>

<div class="center-container animate__fadeInUpBig">
    <!-- Login container -->
    <div class="container">
        <!-- Display error message if present -->
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger" role="alert" id="errorAlert">
                @errorMessage
            </div>

            <!-- JavaScript to automatically hide the alert after 5 seconds -->
            <script>
                setTimeout(function () {
                    var errorAlert = document.getElementById('errorAlert');
                    errorAlert.style.display = 'none';
                }, 5000); // Set the timeout duration in milliseconds (e.g., 5000 ms for 5 seconds)
            </script>
        }

        <!-- Email input field -->
        <div class="form-group">
            <label for="email" style="color:white">Email</label>
            <InputText id="email" @bind-Value="email" class="form-control" placeholder="Example@gmail.com" style="color:#21D192;" />
        </div>

        <!-- Password input field -->
        <div class="form-group">
            <label for="password" style="color:white">Password</label>
            <InputText id="password" @bind-Value="password" type="password" class="form-control" placeholder="Password" style="color:#21D192;" />
        </div>

        <!-- Login button with onclick event -->
        <button type="button" class="btn " style="background-color:white; color:#21D192;" @onclick="Login">Login</button>
    </div>
</div>

@code {
    // Properties for email, password, and error message
    string email { get; set; }
    string password { get; set; }
    string errorMessage { get; set; }

    // Method to handle the login button click
    private void Login()
    {
        // Use DalAdmins to check admin credentials
        var admins = DalAdmins.GetAdminInfo();
        var matchingAdmin = admins.FirstOrDefault(a => a.Email == email && a.Password == password);

        // Check if admin credentials are valid
        if (matchingAdmin != null)
        {
            // Admin credentials are valid, navigate to the home page
            Navigation.NavigateTo("/home");
        }
        else
        {
            // Invalid credentials, display an error message
            errorMessage = "Invalid credentials. Login failed.";
        }
    }
}
